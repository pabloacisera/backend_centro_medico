import { CreateClienteDto } from './dto/create-cliente.dto';
import { UpdateClienteDto } from './dto/update-cliente.dto';
import { PrismaService } from 'src/prisma-service/prisma-service.service';
export declare class ClienteService {
    private readonly prisma;
    constructor(prisma: PrismaService);
    create(createClienteDto: CreateClienteDto): Promise<{
        id: number;
        protocolo: number;
        nombre: string;
        dni: string;
        nacimiento: Date;
        edad: number;
        direccion: string;
        localidad: string;
        telefono: string;
        email: string;
        seguridadSocial: string;
        obs: string | null;
        userId: number;
        createdAt: Date;
        presente: boolean;
    }>;
    findAll(userId: number): Promise<{
        id: number;
        protocolo: number;
        nombre: string;
        dni: string;
        nacimiento: Date;
        edad: number;
        direccion: string;
        localidad: string;
        telefono: string;
        email: string;
        seguridadSocial: string;
        obs: string | null;
        userId: number;
        createdAt: Date;
        presente: boolean;
    }[]>;
    findAllformAdmin(): Promise<{
        id: number;
        protocolo: number;
        nombre: string;
        dni: string;
        nacimiento: Date;
        edad: number;
        direccion: string;
        localidad: string;
        telefono: string;
        email: string;
        seguridadSocial: string;
        obs: string | null;
        userId: number;
        createdAt: Date;
        presente: boolean;
    }[]>;
    getClientsByIds(ids: number[]): Promise<any[]>;
    update(id: number, updateClienteDto: UpdateClienteDto, userId: number): Promise<{
        id: number;
        protocolo: number;
        nombre: string;
        dni: string;
        nacimiento: Date;
        edad: number;
        direccion: string;
        localidad: string;
        telefono: string;
        email: string;
        seguridadSocial: string;
        obs: string | null;
        userId: number;
        createdAt: Date;
        presente: boolean;
    }>;
    remove(id: number, userId: number): Promise<{
        id: number;
        protocolo: number;
        nombre: string;
        dni: string;
        nacimiento: Date;
        edad: number;
        direccion: string;
        localidad: string;
        telefono: string;
        email: string;
        seguridadSocial: string;
        obs: string | null;
        userId: number;
        createdAt: Date;
        presente: boolean;
    }>;
}
